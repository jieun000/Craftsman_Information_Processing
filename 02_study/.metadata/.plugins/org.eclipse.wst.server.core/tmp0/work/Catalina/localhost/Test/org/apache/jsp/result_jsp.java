/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-06 05:21:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import javax.sql.*;

public final class result_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.sql");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	Connection con = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	String sql = "select a.artist_id, a.artist_name, a.artist_gender, sum(b.point), avg(b.point), row_number() over(order by sum(b.point) desc) from tbl_artist a inner join tbl_audition b on a.artist_id = b.artist_id group by a.artist_id, a.artist_name, a.artist_gender order by sum(b.point) desc";
	try {
		Class.forName("oracle.jdbc.OracleDriver");
		con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521/xe","system","1234");
		pstmt = con.prepareStatement(sql);
		rs = pstmt.executeQuery();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	* { margin: 0; padding: 0; }\r\n");
      out.write("	nav > a { text-decoration: none; color: white; padding: 1%;}\r\n");
      out.write("	nav > a:hover { background: gray; }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header style=\"background: gray; color: white; text-align: center; width: 100%; padding: 1.5%;\">\r\n");
      out.write("		<h3>오디션 프로그램</h3>\r\n");
      out.write("	</header>\r\n");
      out.write("	<nav style=\"background: lightgray; width: 100%; padding: 1% 0;\">\r\n");
      out.write("		<a href=\"main.jsp\">홈으로</a>\r\n");
      out.write("		<a href=\"joinForm.jsp\">오디션 참가등록</a>\r\n");
      out.write("		<a href=\"result.jsp\">오디션 결과</a>\r\n");
      out.write("	</nav>\r\n");
      out.write("	<section>\r\n");
      out.write("		<h3 style=\"text-align: center; margin: 20px;\">오디션 결과</h3>\r\n");
      out.write("			<table border=\"1\" style=\"margin: auto; text-align: center;\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>참가번호</th>\r\n");
      out.write("					<th>참가자이름</th>\r\n");
      out.write("					<th>참가자성별</th>\r\n");
      out.write("					<th>점수합계</th>\r\n");
      out.write("					<th>평균점수</th>\r\n");
      out.write("					<th>순위</th>\r\n");
      out.write("				</tr>\r\n");

	if(rs.next()) {
		do {
			String gender = "남";
			if(rs.getString(3).equals("F")) gender = "여";

      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>");
      out.print(rs.getString(1) );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(rs.getString(2) );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(gender );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(rs.getDouble(4) );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(rs.getDouble(5) );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(rs.getInt(6) );
      out.write("</td>\r\n");
      out.write("				</tr>\r\n");

			} while(rs.next());
		}
	} catch(Exception e) {
		e.printStackTrace();
	} finally {
		if(rs!=null) rs.close();
		if(pstmt!=null) pstmt.close();
		if(con!=null) con.close();
	}

      out.write("	\r\n");
      out.write("			</table>\r\n");
      out.write("	</section>\r\n");
      out.write("	<footer style=\"background: gray; color: white; width: 100%; text-align: center; padding: 1.5%; position: absolute; bottom: 0;\">\r\n");
      out.write("		<p>\r\n");
      out.write("			HRDKOREA Copyright&copy;2016 All rights reserved. Human Resources Development Service of Korea\r\n");
      out.write("		</p>\r\n");
      out.write("	</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
